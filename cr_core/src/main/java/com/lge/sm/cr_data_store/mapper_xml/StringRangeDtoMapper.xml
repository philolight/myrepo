<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lge.sm.cr_data_store.mapper.StringRangeDtoMapper">
  <resultMap id="BaseResultMap" type="com.lge.sm.cr_data_store.dto.StringRangeDto">
    <id column="string_range_id" jdbcType="BIGINT" property="stringRangeId" />
    <result column="length" jdbcType="INTEGER" property="length" />
    <result column="regex" jdbcType="VARCHAR" property="regex" />
    <result column="cdate" jdbcType="VARCHAR" property="cdate" />
    <result column="script_name" jdbcType="VARCHAR" property="scriptName" />
    <result column="field_skin_id" jdbcType="VARCHAR" property="fieldSkinId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    string_range_id, length, regex, cdate, script_name, field_skin_id
  </sql>
  <select id="selectByExample" parameterType="com.lge.sm.cr_data_store.dto.StringRangeDtoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from string_range
    where string_range_id = #{stringRangeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from string_range
    where string_range_id = #{stringRangeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lge.sm.cr_data_store.dto.StringRangeDtoExample">
    delete from string_range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lge.sm.cr_data_store.dto.StringRangeDto">
    insert into string_range (string_range_id, length, regex, 
      cdate, script_name, field_skin_id
      )
    values (#{stringRangeId,jdbcType=BIGINT}, #{length,jdbcType=INTEGER}, #{regex,jdbcType=VARCHAR}, 
      #{cdate,jdbcType=VARCHAR}, #{scriptName,jdbcType=VARCHAR}, #{fieldSkinId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lge.sm.cr_data_store.dto.StringRangeDto">
    insert into string_range
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stringRangeId != null">
        string_range_id,
      </if>
      <if test="length != null">
        length,
      </if>
      <if test="regex != null">
        regex,
      </if>
      <if test="cdate != null">
        cdate,
      </if>
      <if test="scriptName != null">
        script_name,
      </if>
      <if test="fieldSkinId != null">
        field_skin_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stringRangeId != null">
        #{stringRangeId,jdbcType=BIGINT},
      </if>
      <if test="length != null">
        #{length,jdbcType=INTEGER},
      </if>
      <if test="regex != null">
        #{regex,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null">
        #{cdate,jdbcType=VARCHAR},
      </if>
      <if test="scriptName != null">
        #{scriptName,jdbcType=VARCHAR},
      </if>
      <if test="fieldSkinId != null">
        #{fieldSkinId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lge.sm.cr_data_store.dto.StringRangeDtoExample" resultType="java.lang.Long">
    select count(*) from string_range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update string_range
    <set>
      <if test="record.stringRangeId != null">
        string_range_id = #{record.stringRangeId,jdbcType=BIGINT},
      </if>
      <if test="record.length != null">
        length = #{record.length,jdbcType=INTEGER},
      </if>
      <if test="record.regex != null">
        regex = #{record.regex,jdbcType=VARCHAR},
      </if>
      <if test="record.cdate != null">
        cdate = #{record.cdate,jdbcType=VARCHAR},
      </if>
      <if test="record.scriptName != null">
        script_name = #{record.scriptName,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldSkinId != null">
        field_skin_id = #{record.fieldSkinId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update string_range
    set string_range_id = #{record.stringRangeId,jdbcType=BIGINT},
      length = #{record.length,jdbcType=INTEGER},
      regex = #{record.regex,jdbcType=VARCHAR},
      cdate = #{record.cdate,jdbcType=VARCHAR},
      script_name = #{record.scriptName,jdbcType=VARCHAR},
      field_skin_id = #{record.fieldSkinId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lge.sm.cr_data_store.dto.StringRangeDto">
    update string_range
    <set>
      <if test="length != null">
        length = #{length,jdbcType=INTEGER},
      </if>
      <if test="regex != null">
        regex = #{regex,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null">
        cdate = #{cdate,jdbcType=VARCHAR},
      </if>
      <if test="scriptName != null">
        script_name = #{scriptName,jdbcType=VARCHAR},
      </if>
      <if test="fieldSkinId != null">
        field_skin_id = #{fieldSkinId,jdbcType=VARCHAR},
      </if>
    </set>
    where string_range_id = #{stringRangeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lge.sm.cr_data_store.dto.StringRangeDto">
    update string_range
    set length = #{length,jdbcType=INTEGER},
      regex = #{regex,jdbcType=VARCHAR},
      cdate = #{cdate,jdbcType=VARCHAR},
      script_name = #{scriptName,jdbcType=VARCHAR},
      field_skin_id = #{fieldSkinId,jdbcType=VARCHAR}
    where string_range_id = #{stringRangeId,jdbcType=BIGINT}
  </update>
</mapper>